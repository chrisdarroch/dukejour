<%
  mdl = 'song'
  create_entry = jquery_xhr :create, Entry,
    :params => "'entry[song_id]': song_id",
    :format => :jug,
    :callback => %Q(
      $('#queue ul.entries').append(data)
        .children(':last').hide()
        .show('blind', {direction: 'vertical'}, 500);
    )
%>

function selectSearchResult() {
  var record, record_email;

  song_id = parseInt($(this).find('.song_id').html());

  if (0 < song_id) {
    <%= create_entry %>;

    jQuery('#suggest_<%= mdl %>')
      .val('')
      .focus();
  }
}

function size_suggest_results_to_window() {
  if ($('.ac_results:visible').length > 0) {
    while ($('.ac_results').offset().top + $('.ac_results').height() < $(window).height() - $('#footer').outerHeight()) {
      if (jQuery('.ac_results ul li:hidden').length == 0) break;
      jQuery('.ac_results ul li:hidden:first').show();
    }
    while ($('.ac_results').offset().top + $('.ac_results').height() > $(window).height() - $('#footer').outerHeight()) {
      jQuery('.ac_results ul li:visible:last').hide();
    }
  }
}

function on_suggest() {
  size_suggest_results_to_window();
  jQuery('.ac_results li').click(selectSearchResult);
}

jQuery(function() {

  // Prevent submits
  jQuery("form:first").submit(function() { return false; });

  jQuery(window).resize(size_suggest_results_to_window);

  // When an entry in the completion list is ENTERinated, AJAX load the corresponding record
  jQuery("#suggest_<%= mdl %>")
    .keypress(function(e) {
      key = e.which;
      if ((KEYS.RETURN == key) || (KEYS.ENTER == key) || (KEYS.TAB == key)) {
        selectSearchResult();
      }
    });

  // Hook the suggestion code to the text field
  jQuery("#suggest_<%= mdl %>")
    .focus()
    .suggest("<%= suggest_songs_path :fields => 'normalized_name,normalized_artist,normalized_album', :limit => 25 %>", {
      callback: on_suggest,
      cache_callback: on_suggest
    });
});

<%= javascript_for_ajax_response %>
